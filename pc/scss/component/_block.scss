@charset 'utf-8';

@use 'sass:math';
@use '../setting/const';
@use '../setting/var';
@use '../helper/mixin';

//< 숨김
[data-hidden] {
	visibility: hidden;
}

[data-none] {
	display: none;
}
//> 숨김

//< 섹션
.mm_section {
	> h6.mm_strapline {
		margin-top: 25px;
	}
}
//> 섹션

//< 이너
.mm_inner {
	position: relative;
	margin: 0 auto;
	width: 1360px;
	@include mixin.clearfix();
}
//> 이너

//< 기본형
.mm_block {
	display: block;
}

.mm_inline {
	display: inline-block;
}

.mm_lside {
	float: left;
	@include mixin.clearfix();
}

.mm_rside {
	float: right;
	@include mixin.clearfix();
}

.mm_full {
	display: block;
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	width: auto;
	height: auto;
}

.mm_fluid {
	@include mixin.fluid-media(100%);
}
//> 기본형

//< 스크롤러
.mm_scroller {
	overflow-x: hidden;
	overflow-y: auto;
	height: 100%;

	&[class*="_x_"] {
		overflow-x: auto;
		overflow-y: hidden;
		width: 100%;
		height: auto;
	}

	&[class*="_xy_"] {
		overflow: auto;
	}
}
//> 스크롤러

//< 싱커
[class^="mm_syncer"],
[class*=" mm_syncer"] {
	display: none;

	&[class$="-use"],
	&[class*="-use "] {
		display: block;

		@include mixin.context-unify(table) {
			display: table;
		}

		@include mixin.context-unify(tbody) {
			display: table-row-group;
		}

		@include mixin.context-unify(tr) {
			display: table-row;
		}

		@include mixin.context-unify(td) {
			display: table-cell;
		}

		@include mixin.context-unify(button) {
			display: inline-block;
		}
	}
}
//> 싱커

//< 디싱커
[class^="mm_desyncer"],
[class*=" mm_desyncer"] {
	&[class$="-use"],
	&[class*="-use "] {
		display: none;
	}
}
//> 디싱커

//< 플렉스
.mm_flex {
	@include mixin.flex-container();

	&[class*="_column_"] {
		@include mixin.flex-container(column);
		min-height: 100%;
	}

	&[class*="_equal_"] {
		> * {
			@include mixin.prefix(flex, 1, webkit ms);
			width: auto;
			height: 100%;

			> a,
			> button {
				display: block;
				width: 100%;
				text-align: center;

				&:not(.mm_btn) {
					height: 100%;
				}
			}
		}
	}

	&[class*="_auto_"] {
		> * {
			@include mixin.prefix(flex, auto, webkit ms);
			width: auto;
			height: 100%;

			> a,
			> button {
				display: block;
				text-align: center;

				&:not(.mm_btn) {
					height: 100%;
				}
			}
		}
	}
}

.mm_flex- {
	&equal {
		@include mixin.prefix(flex, 1, webkit ms);
	}

	&auto {
		@include mixin.prefix(flex, auto, webkit ms);
	}
}
//> 플렉스

//< 라인
.mm_line {
	border-top: 1px solid #eee;
	border-bottom: 5px solid #f5f5f5;

	@include mixin.context-unify(hr) {
		height: 0;
		@include mixin.font('0/1');
	}
}
//> 라인